jobs:
  build-and-push:
    executor: docker/docker
    steps:
      - run:
          name: Setup Environment Variables
          command: |
            echo "export GIT_SHA1=$CIRCLE_SHA1" >> $BASH_ENV
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: yalelibraryit/dc-management
          tag: $GIT_SHA1
      - docker/push:
          image: yalelibraryit/dc-management
          tag: $GIT_SHA1
  run-tests:
    docker:
      # Image pulled from registry
      - image: yalelibraryit/dc-management:sha-$SHORT_GIT_HASH
        environment:
          SHORT_GIT_HASH: $(echo $CIRCLE_SHA1 | cut -c -7)
          POSTGRES_HOST: localhost
          POSTGRES_DB: yul_dc_management_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          SOLR_CORE: blacklight-test
          SOLR_URL: http://localhost:8983/solr
      - image: yalelibraryit/dc-solr:79a71ec
        command: bash -c 'precreate-core blacklight-test /opt/config; exec solr -f'
      - image: circleci/postgres:9.5-alpine-ram
        environment:
          POSTGRES_DB: yul_dc_management_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Rubocop
          command: bundle exec rubocop --parallel
      - run:
          name: rspec
          # Excludes tests that require Yale VPN access
          command:  |
            bundle exec rspec --tag ~vpn_only:true
  publish-latest:
    environment:
        SHORT_GIT_HASH: $(echo $CIRCLE_SHA1 | cut -c -7)
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: yalelibraryit/dc-management
          tag: master,sha-$SHORT_GIT_HASH
      - docker/push:
          image: yalelibraryit/dc-management
          tag: master,sha-$SHORT_GIT_HASH
orbs:
  docker: circleci/docker@1.0.1
version: 2.1
workflows:
  commit:
    jobs:
      - build-and-push:
          context: yul-dc
      - run-tests:
          requires:
            - build-and-push
      - publish-latest:
          context: yul-dc
          requires:
            - build-and-push
            - run-tests
          filters:
            branches:
              only: master
